<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADuEQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAEbVJ
        REFUeNrt3X2UXHV9x/H3d5PsQmJAHqL1BDV3fCo4Ey2tVjytj7Snx+ND5aDQIiothwJ3KKABKg/aGlAI
        aFDuRKy2PaKitFAsWtrjUanWaouVh9wBBM1cDVhBDCGECLvZ3W//mEQSszOzM/vwm9nf53XOcnKYuzuf
        uTP3M/fhd+8FERERERERERERERERERERERERERERERERERkIFjrATLz0tMImhhjBWOqw2HzQX5EMgl0f
        s3GcXy6aZPSOTyQeOlOvBnJxKafFcvCjDHs98BKMFcBw6FwSlTGch4E7Hf+6Gd/Ns9L20KG6NVAFUKkW
        i939tRhn4/YqM5Y99ejAlrAMpKcWHXd2mPl/utt6w76R11aNh07X/avoc+W0sT9mZwDnGRwcOo/Inhww
        ZwvGOsevqmelJ0Jnmo6BKIBKtRh256/AzzezkdB5RFpxfBTsQ8Cl9SwZC52nk6HQAabpWDPO0cIv/c6w
        EYNzcI4NnWV6eftcOS2eA36Tmb0kdBaRaXFw407D35xnpc2h47TT/2sAxlsxWx06hsi0GRi+2uGY0FGm
        EbV/VarF04AbgaNbTuQ+6nAP2MNz/GIceDbG4S0fhTuBh+jz+TrAHHgmzUO/raa4B7ifOXwPHLDmoefD
        gZE2030NeGs9Sx4PNsc6WBw6QFvuK8EOb/1m+3bgA8Bngbk9Bus2zpCfBlw15cMwAXwYt+vNvL/n64By
        t3HMjwU+b7BoyomMDUzaJ5jj98Dx5YadiPM3GMunjuKHAyuBe0PPu1b6/YP6LPCDWpW5YzeB1+q10rzs
        bS1Xi/EOXys76xtWTdAsA5kD5bTY2e5xh/F5eg9Gy2mxAfy3zTkB2/uTseuw4EHAs+jjAujvfQDGMsym
        HuHnAH7bfC38zTjS7+bzParXklHgtlY53GzYzZZ191fnV3+vAbg1C2rKd9Ux6PvjrLLAme1seQpKc79Q
        X3/J9nU4EZlbKgCRiKkARCKmAuiCQ7uzvIaApaEzRmAZLT+3DvjAnInXD1QA3XmUFoeXzNzM+INKWuwX
        OuRCVU6L/YGjzVrt7LcJYGvonIOkv48C9BuncNhmNtXpyAbwNoxHKmnjOozHQsddSNw5AOM4g7e1mWwb
        2I9DZx0kKoCu+CbgB2CvbDHB/sCZGCcBT4ZOu5AY7EezBFoe6vfmMOBNobMOEhVAF+q10qPltPEl8Fe2
        GXJiYAcCB4bOu6B0GuHTHBj2pXqt9GjoqINE+wC6ZVzncHvoGPLr/HbgH0OnGDQqgC7Vs9JmnIvd/ZHQ
        WWT3F79vBdbWa/197n0/UgH0xP8F7P3ubAudJHYG2zDeD9wUOssgUgH0oF573gTwSTNOB/9h6DxRcgf4
        IZACV+e1ks7A7IEKoEf1WjI+OckXgLeAr6e591mDUOaYwzjum4Arcf54wuzaPCtpvvdIRwFm4K4NiQP3
        VNLiHIyrgCMdXoz7CsOG0RnEs8UdHzOzhw2/C+M2m2Tzxg2JvvVnSAUwC/JaMgEUu35uqLyj0II/ywwj
        /9zg3oKrX6kA5oA+qDIotA9AJGIqAJGIqQBEIqYCEImYCkAkYioAkYipAEQipgIQiZgKQCRiKgCRiKkA
        RCKmAhCJmApAJGIqAJGIqQBEIqYCEImYCkAkYioAkYipAEQipgIQiZgKQCRiKgCRiOmy4D160XvutyVj
        44ea8yLMl0Z/DxB33MyAJ8z5oU/ag/VPrNLl0fucCqAH5bQYsrHxNzmcDxxB8y5AcbNfFeBO4EcM+eWV
        tLguryW6bVcfUwH0wIyjcGpmrIz9i39PBuA+jNlLcD7m+Fbg5tC5pDXtA+jS6mphwAkYK0Nn6Uu71gTM
        OAR4VyVtLAkdSVpTAXTJ3Udwf0HoHIPAYBWwLHQOaU2bAF1yYyfwkNb8p8O2AE+GTiGtaQ2gS/WsNGHO
        9eDbQ2fpZw6jGP+U1xIVQB9TAfTCuBnsg8CDOs61N3dw9y3g6xyuC51H2tMmQA/yrDRWrhZXGv513F7u
        cIBpm4BdZbjD4H9xvyOvlcZCZ5L2VAA9qmfJOHD7rh+RgaRNAJGIqQBEIqYCEImYCkAkYioAkYipAEQi
        pgIQiZgKQCRiKgCRiKkARCKmocA9KleLJTi/ZXAUxvLmSHidEDA/HMcwZzvwXYfb67VkZ+hUg0gF0INy
        2tjP4D0YZwOHNv+vFv75Y3vMbf+FwZWVtPGRvFbSqcdd0iZAD8zsjTQvCHpo6CxRM8DsULD3AW8MHWcQ
        qQC6VEkbi4Bj0KWu+oexzOGYcrppUegog0YF0CWHJe6+InQO2ccKMF2AtEsqgC5NLt45inFv6BzyFAcw
        u2/Ih0ZDZxk0KoAu3f2xF7m5fRb3zaGzCOBgsNnwazZu0J2IuqWjAD0wJm51Fp3qzgVA2YzddwbSB3B+
        NO9BAmMGdZwPYXZr6FCDSAXQg4215zvwb+W0uBV4HtohGMoOjE15lmwJHWRQqQBmoF5LtgD68MnA0j4A
        kYipAEQipgIQiZgKQCRiKgCRiKkARCKmAhCJmApAJGIqAJGIaSTgDDx77SN24EPbhsx9CN0ffJ45uE3y
        yAGT+RcO0TkYPVIB9KiSNg72h7YdC7ymeU1AmW8O2znksf8oV4vr61nySOg8g0gF0INKWhzi+FWGvx1s
        ka4HGILtXul6uzuvKaeNM+q1ks7L6JL2AfTC+FMzO6658Etgi8CPA04IHWQQqQC6VEkbw+7+ejTv+oaZ
        DWG8vlxtDM/8r8VFmwBdal6AhpHQOWRv5jaMtsW6pm+xLtVrpVEz+5/QOeTXGLfmtUTXBOySCqAXzmeA
        7+gKYOE13wH/DvhnQmcZRNoE6EFeS4pytXESblUzfg/3ZRoHMM/cAdsBfNuNrJ6VGqEjDSIVQI/qWem+
        cvrjs8GfDozozoDzZ495PQr2aD1LJkJnGlQqgBmo11ZNoGsCygDTPgCRiKkARCKmAhCJmApAJGIqAJGI
        qQBEIqYCEImYCkAkYioAkYipAEQipgIQiZgKQCRiKgCRiKkARCKmAhCJmApAJGIqAJGIqQBEIqYCEImY
        CkAkYioAkYipAEQipgIQiZgKQCRiKgCRiKkARCKmAhCJmApAJGIqAJGIqQBEIqYCEImYCkAkYioAkYip
        AEQipgIQiZgKQCRiKgCRiKkARCKmAhCJmApAJGIqAJGIqQBEIqYCEImYCkAkYotDB5CFqXJWYVjz3/n6
        xEPnkampAGRWVarFYnde4eP+BmAFcF8lLW7Ma8mPQmeTfWkTQGbNi88ohhz+3OBGc3ufYScbts6NGyrV
        xlGh88m+VAAya8x5M3AxxqG7V/8BDFaDXVipFk8LnVH2pgKQWVFOG7+D+2UGh7aY5OXgzw+dU/amfQAy
        Y+Vq4zlgVxj+wpYTOUvA9gudVfamNQCZkUraOADnYuDV7Lne/+uM+x02h84re1MBSM/K1WIJ8F7D/qTN
        oo87ow6frNeS/wudWfamApCZOMHNzsa8zaaku+Gfxvn70GFlXyoA6Um5WrzWYK05y1uu+jvg3Iyxtl5L
        fhk6s+xLBSBdK6eNw8GvAA5rt9kP3AGcm2elh0JnlqmpAKQr5bR4BmaXmXNkh0l/irEmr5XuDp1ZWtNh
        QJm2ctrYH7gQ541Y669+dx43uOigiVXfCJ1Z2lMByLS8uLppCDjV8FNot/TDuBnrHT7/ratNJwH1OW0C
        yLSY21twLgAbaTWNNxf3LwIfqWfJWOjM0pnWAPpUJS2WuFHCOQzzRw3uzbPS4yGylNPiZcBlZhzSeirH
        4FtgF+RZsi3QbJMuaQ2gD5WrxcHAJQZfw/gK8FWwayppsXres6TFc4ErDF7QbjrH7nNjTZ4lGu03QFQA
        faZSbSwCX+PGGvDDDPYz7GDgrcDnKmnxmvnKUq4WB2J+Meav6nC4b4vBefWs9L2wc0+6pQLoN27PNbfj
        DWzfATZewfiHSrU4ZnVzp9ycKafFMM4asOOt3dLv/qS7XzLk3BR61kn3VAB9xuE3vNUptc2d76vAr3aG
        Tq5UG0vmIsOfvXurAScAZ1m7/USOA58Crr6zlkwGnnXSAxVAvzG2YmzvMNEK8CtwO7ecFktnO8L3nvbo
        6wzWmtHyAh6O48ZXMLu4Xis9EXq2SW9UAH3G3BsGX53GlMuBiwy/pFxtHDRbz1+pFkcAV2Cs7PD8t4Gf
        m2fJz8POMZkJFUCfyWulUWCtu/97x1E0xgjGGYZ9vJIWK6fx59uqVItngq8DXtph0gcMX1PPSj8IPb9k
        ZlQAfSjPkgbGyYZfC95h29oW4bwD49OVavHC6T3DvsppsdThIrA3tJvOYbvDhXlWuiX0fJKZUwH0qXpW
        +inOGe6WudN+VF1zJ/0fOVxTrjZe1u1zlc9oLAJOxTmZtpf1YRz8o8C1oeePzA4VQB/La6VHgPPNWAt0
        HAVo7r8Ldk2l2vjDyin3Wudn2MV5C8b5Zox0mO5a4KP1LNkZet7I7FAB9Ll6LdmBs85hjTu/aF5lowUz
        DH4T5+9YMnx85bRiUae/X0mLl+N2mdFumC8A3wQurGelx0LPE5k9KoABkNeSMXf/FMapjv2k4y+YHQZk
        PsRp5bRo+a1eSYvnOlxhRvvLdTv3Au/Na8n9oeeFzC4VwIC4q1aarGfJDcBJDvW2awIAxsEYl5pxfiXd
        94Yc5Wrj6eAfMvj9Dk/9C+C8PEu+H3oeyOxTAQyYepbcAv5O4L86dwDLgPcB6ypp8avRheW0GAbWuHFc
        +zH+/iT4xQ5fDv26ZW6oAAZQPSvdjtu7gC//6iz81pZg/AXmG5o38ADgRLAzDWu9j8DdgU8Cf1vXMN8F
        SwUwoPJasgnjFLDPABMdJh8Ce5vBpyvVxikGf23Q4T59dhPOJXmmYb4LmQpggOVZ8iBwljsfBZ7s+Atu
        R4NdhXFYhwm/j/l5ea30cOjXKHNLBTDgdl195wMO73dof4iueV7vcNtp3O/HeW+ele4N/dpk7qkAFoB6
        LXnCYT34mY4/2PEIQWuPgV2Q10rfDP2aZH6oABaIu7Jk3H3oGoNTcNvUbQe4M+7ORzD/YujXIvNHBbCA
        3FVbNZlnpS8D78a4vctf/5zBlXlW0jDfiKgAFqC8lnwbeCdwS6cVgV2P32LGRXkt0TDfyKgAFqg8S+ru
        nIRzvUPL4/jm/ABnTZ4lD4TOLPNPBbCA1WvJTzBOBz4Fvu+qvfvPwc/Na8ltobNKGCqABa6eJQ+DnwN8
        EOen7j7h+Ljj97jZmbj/a+iMEo7uDBSBelbaXqkWl4L/M3AEsBO4w4bYnGfP0/37IqYCiESeJePA3bt+
        RABtAohETQUgEjEVgEjEVAAiEVMBiERMBSASMRWASMRUACIRUwGIREwFIBIxFYBIxFQAIhFTAYhETAUg
        EjEVgEjEVAAiEVMBiERMBSASMRWASMRUACIRUwGIREwFIBIxFYBIxFQAIhFTAYhETAUgEjEVgEjEVAAi
        EVMBiERMBSASsf4uAPNJrPXDDsOhI0rsvPVn0ABjMnTCdvq6ANxth8PYlA82i+HIclqMhM4pcSqnjRHg
        yKm+oxww9zFz3xE6ZzuLQwdox8x/5s5WzJZO8SjAmw0/vVwtPouz3bp9ApEeePO/y8FOBN401TS7Potb
        gZ+FzttOXxeAOw8A9wArp3rcjOVgHwbeCTwcOq9EZQX44Ya1XAN17B7wB0IHbafvvzTLaeNMzNbbAGQV
        2YPjnJ3Xko+FDtJOX+8DADCzGw3fGDqHSDccNmLcGDpHJ31fAHmWbHa4DGd76Cwi0+HO4zjr8izZHDpL
        J31fAADm3ABcjvNk6Cwi7Tg+Cn45cH3oLNMxMNvV5bTYH/OqOedhdkjoPCJ7csBgi+PrgKvqWemJ0Jmm
        Y2AKAKCSNhaDvRbjLPBXA8ueegkeOp5EZdfnzh2wHRjfAl9vbrdsrCXjodN1+SoGS7naWG7OKzCOBluN
        +zMw06hAmT/uY278HNhoztcw/jvPSgO3n2ogC2C38l8WZpOM4L4Us8W718NE5szuz5j7uBu/ZMhG6x9P
        tPopIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiInPr/wHq6PZNGNIoLQAAAABJRU5ErkJggg==
</value>
  </data>
</root>